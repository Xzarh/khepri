/**
 * @fileOverview Khepri program parsers.
 */
static define;
define(['require',
        'parse/parse',
        'nu/stream',
        'ecma/parse/common',
        'ecma/parse/token_parser',
        'khepri_ast/program',
        'khepri/parse/statement_parser'],
function(require,
        parse,
        stream,
        ecma_parse,
        token,
        ast_program,
        statement){
"use strict";

/* Circular
 ******************************************************************************/
var statementParser = function() {
    return require('khepri/parse/statement_parser').statement.apply(undefined, arguments);
};

/* Parsers
 ******************************************************************************/
// Source Elements
////////////////////////////////////////
/**
 * Parser for an ECMAScript source element.
 * 
 * Source Elements are top level nodes that makes up a program.
 */
var sourceElement = statementParser;

/**
 * Parser for a enumeration of zero or more source elements.
 */
var sourceElements = parse.eager(parse.many(sourceElement));

// Program
////////////////////////////////////////
/**
 * Parser for an ECMAScript 5.1 program.
 */
var program = parse.Parser('Program',
    ecma_parse.node(
        parse.eager(parse.rec(\self ->
            parse.either(
                parse.next(parse.eof(), parse.always(stream.end)),
                parse.cons(sourceElement, self)))),
        ast_program.Program.create));

/* Export
 ******************************************************************************/
return {
    'sourceElement': sourceElement,
    'sourceElements': sourceElements,
    
    'program': program
};

});