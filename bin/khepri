#!/usr/bin/env node

var path = require('path');
var fs = require('fs');

var mkdirp = require('mkdirp');

var compile = require('../index').compile;
var compile_file = require('../index').compile_file;
var watch = require('../index').watch;


var root = path.join(__dirname, '..');

var log = process.stdout.write.bind(process.stdout);

// Arguments
var argParse = require('optimist')
    .wrap(80)
    .usage(
        ["Compile Khepri to Javascript.",
        "",
        "Usage: khepri [options] [-o out_file] [in_file]",
        "",
        "Compiles Khepri input from `in_file` to Javascript in `out_file`. If `in_file` is",
        "not specified, reads input from stdin. If `in_file` is a directory, compiles all",
        "*.kep files to output files paths building to paths rooted at `out_file`",
        "When `out_file` is not specified, writes output to stdout."].join('\n'))
    .boolean('help')
        .describe('help', "Print usage info")
    .boolean('version')
        .describe('version', "Print version number")
    .boolean('watch')
        .describe('watch', "Watch for for changes")
    .alias('w', 'watch')
    .options('o', {
        'describe': 'Output file or directory'
    })
    .options('package_manager', {
        'default': 'amd',
        'describe': 'Package manager to target. (amd | node)'
    })
    .options('header', {
        'describe': 'Javascript header to prefix output.'
    });

var argv = argParse.argv;

// --version
if (argv.version) {
    var pack = require(path.join(root, 'package.json'));
    log(pack.version + '\n');
    return 0;
}

// --help
if (argv.help) {
    argParse.showHelp(log);
    return 0;
}


var inFile = argv._[0],
    outFile = argv['o'],
    header = argv['header'];

var options = {};
if ('package_manager' in argv) options.package_manager = argv.package_manager;

var err = function(e) { console.error(e + ''); };
var ok = (!outFile ?
    function(x) {
        process.stdout.setEncoding('utf8');
       log(x);
    } :
    function(out, inFile, outFile) {
        mkdirp(path.dirname(outFile), function(err) {
            fs.writeFile(outFile, out, 'utf8', function(err) {
                if (err) throw err;
                console.log("Compiled '" + inFile + "' to '" + outFile + "'");
            });
        });
    });


// --watch
if (argv.watch) {
    var watchr = require('watchr');
    if (!inFile) {
        log('No watch input directory, watching current directory\n');
        inFile = process.cwd();
    }
    
    if (!outFile) {
        process.stdout.write('No watch output directory, outputting to input directory\n');
        outFile = inFile;
    }
    
    watch.watch(inFile, outFile, header, options, ok, err);
    
    return 0;
}

// Compiler
if (!inFile) {
    process.stdin.resume();
    process.stdin.setEncoding('utf8');
    process.stdin.on('data', function(data) {
        compile.compile(data, header, options, ok, err);
    });
} else {
    compile_file.compileFile(inFile, outFile, header, options, ok, err);
}
